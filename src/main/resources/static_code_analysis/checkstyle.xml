<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
        "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
        "https://checkstyle.org/dtds/configuration_1_3.dtd">
<module name="Checker">
    <module name="SuppressWarningsFilter"/>
    <module name="SuppressWithPlainTextCommentFilter"/>
    <property name="charset" value="UTF-8"/>
    <property name="severity" value="error"/>
    <property name="fileExtensions" value="java, properties, xml"/>
    <property name="localeLanguage" value="en"/>

    <!--
    Checker checks
    -->
    <module name="NewlineAtEndOfFile">
        <property name="lineSeparator" value="lf"/>
    </module>
    <module name="UniqueProperties"/>
    <module name="RegexpMultiline">
        <property name="format" value="(?s)\n\s*\n\s*$"/>
        <property name="message" value="Two or more consecutive empty lines aren't allowed."/>
        <property name="severity" value="error"/>
    </module>
    <module name="RegexpMultiline">
        <property name="format" value="\r\n$"/>
        <property name="message"
                  value="Lines must end with UNIX-like end of line. Windows-like line endings are not allowed."/>
    </module>
    <module name="RegexpMultiline">
        <property name="format" value="(?m)(\n\s*\n\s*\})"/>
        <property name="message" value="Empty lines before a closing brace are not allowed."/>
        <property name="matchAcrossLines" value="true"/>
    </module>
    <module name="RegexpSingleline">
        <property name="format" value="\s+$"/>
        <property name="message" value="Line has trailing spaces. Those are not allowed."/>
    </module>
    <module name="FileLength">
        <property name="max" value="500"/>
    </module>
    <module name="LineLength">
        <property name="fileExtensions" value="java"/>
        <property name="max" value="120"/>
    </module>
    <module name="FileTabCharacter">
        <property name="eachLine" value="true"/>
    </module>

    <!--
    TreeWalker checks
    -->
    <module name="TreeWalker">
        <!-- Enable usage of @SuppressWarnings -->
        <module name="SuppressWarningsHolder"/>

        <!--
        Annotations
        -->
        <module name="AnnotationUseStyle"/>

        <!--
        Block Checks
        -->
        <module name="EmptyBlock"/>
        <module name="EmptyCatchBlock"/>
        <module name="LeftCurly"/>
        <module name="NeedBraces"/>
        <module name="RightCurly"/>

        <!--
        Class Design
        -->
        <module name="FinalClass"/>
        <module name="HideUtilityClassConstructor"/>
        <module name="SuppressionXpathSingleFilter">
            <!-- See: https://github.com/checkstyle/checkstyle/issues/2579#issuecomment-539038275 -->
            <property name="checks" value="HideUtilityClassConstructor"/>
            <property name="query"
                      value="//*[MODIFIERS//*[@text = 'UtilityClass' or @text='NoArgsConstructor' or @text = 'SpringBootApplication']]/descendant-or-self::node()"/>
        </module>
        <module name="InnerTypeLast"/>
        <module name="InterfaceIsType"/>
        <module name="MutableException"/>
        <module name="OneTopLevelClass"/>
        <module name="ThrowsCount"/>
        <module name="VisibilityModifier"/>

        <!--
        Coding
        -->
        <module name="CovariantEquals"/>
        <module name="DeclarationOrder"/>
        <module name="DefaultComesLast"/>
        <module name="EmptyStatement"/>
        <module name="EqualsHashCode"/>
        <module name="ExplicitInitialization"/>
        <module name="FallThrough"/>
        <module name="HiddenField">
            <property name="tokens" value="VARIABLE_DEF, PATTERN_VARIABLE_DEF, LAMBDA, RECORD_COMPONENT_DEF"/>
        </module>
        <module name="IllegalCatch"/>
        <module name="IllegalThrows"/>
        <module name="InnerAssignment"/>
        <module name="MagicNumber">
            <property name="ignoreAnnotation" value="true"/>
            <property name="ignoreFieldDeclaration" value="true"/>
            <property name="ignoreHashCodeMethod" value="true"/>
            <property name="ignoreNumbers"
                      value="-0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -100, -1000, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 100, 1000"/>
        </module>
        <module name="MissingSwitchDefault"/>
        <module name="ModifiedControlVariable"/>
        <module name="MultipleStringLiterals">
            <property name="allowedDuplicates" value="2"/>
        </module>
        <module name="MultipleVariableDeclarations"/>
        <module name="NestedForDepth">
            <property name="max" value="0"/>
        </module>
        <module name="NestedIfDepth">
            <property name="max" value="0"/>
        </module>
        <module name="NestedTryDepth">
            <property name="max" value="0"/>
        </module>
        <module name="NoArrayTrailingComma"/>
        <module name="NoClone"/>
        <module name="NoEnumTrailingComma"/>
        <module name="NoFinalizer"/>
        <module name="OneStatementPerLine"/>
        <module name="OverloadMethodsDeclarationOrder"/>
        <module name="PackageDeclaration"/>
        <module name="ParameterAssignment"/>
        <module name="RequireThis"/>
        <module name="ReturnCount"/>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
        <module name="StringLiteralEquality"/>
        <module name="SuperClone"/>
        <module name="SuperFinalize"/>
        <module name="UnnecessaryParentheses"/>
        <module name="UnnecessarySemicolonAfterOuterTypeDeclaration"/>
        <module name="UnnecessarySemicolonAfterTypeMemberDeclaration"/>
        <module name="UnnecessarySemicolonInEnumeration"/>
        <module name="UnnecessarySemicolonInTryWithResources"/>
        <module name="UnusedLocalVariable"/>
        <module name="VariableDeclarationUsageDistance"/>

        <!--
        Imports
        -->
        <module name="IllegalImport"/>
        <module name="RedundantImport"/>
        <module name="UnusedImports"/>

        <!--
        Metrics
        -->
        <module name="BooleanExpressionComplexity"/>
        <module name="ClassDataAbstractionCoupling"/>
        <module name="ClassFanOutComplexity">
            <property name="excludedPackages" value="edu.umd.cs.findbugs.annotations, org.jetbrains.annotations, lombok, lombok.extern.slf4j, com.google.common.annotations,
            org.junit.jupiter.api, org.junit.jupiter.api.extension, org.junit.jupiter.params,org.mockito,org.junit.jupiter.api,org.mockito.junit.jupiter,org.hamcrest,
            org.osgi.service.component.annotations, org.osgi.service.metatype.annotations, org.osgi.service.component.propertytypes"/>
        </module>
        <module name="CyclomaticComplexity">
            <property name="max" value="8"/>
        </module>
        <module name="JavaNCSS">
            <property name="methodMaximum" value="30"/>
            <property name="classMaximum" value="600"/>
            <property name="recordMaximum" value="200"/>
        </module>
        <module name="NPathComplexity"/>

        <!--
        Miscellaneous
        -->
        <module name="ArrayTypeStyle"/>
        <module name="AvoidEscapedUnicodeCharacters"/>
        <module name="CommentsIndentation"/>
        <module name="NoCodeInFile"/>
        <module name="OuterTypeFilename"/>
        <module name="TodoComment"/>
        <module name="UpperEll"/>

        <!--
        Modifiers
        -->
        <module name="RedundantModifier"/>

        <!--
        Naming Conventions
        -->
        <module name="AbstractClassName"/>
        <module name="CatchParameterName"/>
        <module name="ClassTypeParameterName"/>
        <module name="ConstantName"/>
        <module name="IllegalIdentifierName"/>
        <module name="InterfaceTypeParameterName"/>
        <module name="LambdaParameterName"/>
        <module name="LocalFinalVariableName"/>
        <module name="LocalVariableName"/>
        <module name="MemberName">
            <property name="format" value="^[a-z][a-zA-Z0-9_\$]*$"/>
        </module>
        <module name="MethodName">
            <property name="format" value="^[a-z][a-zA-Z0-9_\$]*$"/>
        </module>
        <module name="MethodTypeParameterName"/>
        <module name="PackageName">
            <property name="format"
                      value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
        </module>
        <module name="ParameterName"/>
        <module name="PatternVariableName"/>
        <module name="RecordComponentName"/>
        <module name="RecordTypeParameterName"/>
        <module name="StaticVariableName"/>
        <module name="TypeName"/>

        <!--
        Size Violations
        -->
        <module name="AnonInnerLength"/>
        <module name="ExecutableStatementCount"/>
        <module name="LambdaBodyLength"/>
        <module name="MethodCount">
            <property name="maxTotal" value="20"/>
            <property name="maxPublic" value="20"/>
        </module>
        <module name="MethodLength">
            <property name="max" value="50"/>
        </module>
        <module name="OuterTypeNumber"/>
        <module name="ParameterNumber">
            <property name="max" value="4"/>
        </module>
        <module name="SuppressionXpathSingleFilter">
            <!-- See: https://github.com/checkstyle/checkstyle/issues/7432#issuecomment-570259104 -->
            <property name="checks" value="ParameterNumber"/>
            <property name="query"
                      value="//CTOR_DEF/IDENT[../MODIFIERS/ANNOTATION/IDENT[@text='Inject'] or ../MODIFIERS/ANNOTATION/IDENT[@text='Autowired']]
                            |
                            //METHOD_DEF/IDENT[../MODIFIERS/ANNOTATION/IDENT[@text='Inject'] or ../MODIFIERS/ANNOTATION/IDENT[@text='Autowired']]"/>
        </module>

        <!--
        Whitespace
        -->
        <module name="EmptyForInitializerPad"/>
        <module name="EmptyForIteratorPad"/>
        <module name="EmptyLineSeparator">
            <property name="allowMultipleEmptyLines" value="false"/>
            <property name="allowMultipleEmptyLinesInsideClassMembers" value="false"/>
            <property name="allowNoEmptyLineBetweenFields" value="true"/>
        </module>
        <module name="GenericWhitespace"/>
        <module name="MethodParamPad"/>
        <module name="NoLineWrap"/>
        <module name="NoWhitespaceAfter"/>
        <module name="NoWhitespaceBefore"/>
        <module name="NoWhitespaceBeforeCaseDefaultColon"/>
        <module name="OperatorWrap">
            <property name="tokens"
                      value="COLON, EQUAL, NOT_EQUAL, DIV, PLUS, MINUS, STAR, MOD, SR, BSR, GE, GT, SL, LE, LT, BXOR, BOR, LOR, BAND, LAND, TYPE_EXTENSION_AND, LITERAL_INSTANCEOF"/>
        </module>
        <module name="ParenPad"/>
        <module name="SeparatorWrap">
            <property name="tokens" value="COMMA, SEMI"/>
        </module>
        <module name="SingleSpaceSeparator"/>
        <module name="TypecastParenPad"/>
        <module name="WhitespaceAfter"/>
        <module name="WhitespaceAround"/>

        <!--
        Custom
        -->
        <module name="Regexp">
            <property name="format" value="\s*!=\s*null"/>
            <property name="ignoreComments" value="true"/>
            <property name="message"
                      value="Avoid using '!= null' for nullability check. Use java.util.Optional instead"/>
            <property name="illegalPattern" value="true"/>
        </module>
        <module name="Regexp">
            <property name="format" value="\s*==\s*null"/>
            <property name="ignoreComments" value="true"/>
            <property name="message"
                      value="Avoid using '== null' for nullability check. Use java.util.Optional instead"/>
            <property name="illegalPattern" value="true"/>
        </module>
    </module>
</module>
